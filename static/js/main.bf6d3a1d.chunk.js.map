{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reset","reverse","this","isButtonVisible","goodsList","goods","visibleGoods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","className","onClick","type","classNames","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,MAAQ,WACN,EAAKJ,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAfzD,EAkBES,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAAkBV,IAAaL,EAASM,MAAQF,EAChDY,EA7DH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNc,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQhB,GACN,KAAKL,EAASS,SACZ,OAAOW,EAAME,cAAcD,GAC7B,KAAKrB,EAASW,OACZ,OAAOS,EAAMG,OAASF,EAAME,OAC9B,KAAKvB,EAASM,KACd,QACE,OAAO,MAITF,GACFc,EAAaL,UAIfW,QAAQC,IAAIpB,EAAUD,GAEfc,EAmCaQ,CAChBzB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASd,KAAKP,mBACdsB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASS,WALxC,iCAWA,wBACEmB,QAASd,KAAKJ,aACdmB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASW,SALxC,4BAWA,wBACEiB,QAASd,KAAKD,QACdgB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,YAAa1B,IALnB,qBAWCW,GACC,wBACEa,QAASd,KAAKF,MACdiB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAUe,KAAI,SAAAC,GAAI,OACjB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,eAlFnB,GAAyBC,aC7DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bf6d3a1d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const isButtonVisible = sortType !== SortType.NONE || isReversed;\n    const goodsList = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortAlphabetically}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {isButtonVisible && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goodsList.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}